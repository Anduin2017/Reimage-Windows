echo "Setting timezone..."
sudo timedatectl set-timezone UTC

sudo apt update
sudo apt install -y \
  dotnet9 \
  aria2 \
  ffmpeg \
  iperf3 \
  apt-file \
  gimp vlc \
  ibus-rime \
  fwupd \
  pcp \
  nvme-cli \
  git \
  htop \
  python3-pip \
  python3-venv \
  bc \
  bison \
  build-essential \
  ccache \
  clang \
  cpio \
  dwarves \
  flex \
  gcc \
  git \
  gzip \
  libcap-dev \
  libelf-dev \
  liblz4-dev \
  libncurses-dev \
  libssl-dev \
  libudev-dev \
  libzstd-dev \
  lz4 \
  fastfetch \
  inxi \
  python3 \
  python3-dev \
  python3-distutils-extra \
  python3-setuptools \
  xz-utils \
  zstd

sudo ubuntu-drivers autoinstall

# System no hibernate
sudo systemctl mask hibernate.target hybrid-sleep.target

# Firmware
sudo fwupdmgr refresh
sudo fwupdmgr get-updates
sudo fwupdmgr update

# IBus Rime Config.
zip=https://gitlab.aiursoft.cn/anduin/anduinos-rime/-/archive/master/anduinos-rime-master.zip
wget $zip -O anduinos-rime.zip && unzip anduinos-rime.zip && rm anduinos-rime.zip
rsync -Aavx --update --delete ./anduinos-rime-master/assets/ ~/.config/ibus/rime/
rm -rf anduinos-rime-master

flatpak install -y flathub com.google.Chrome
flatpak install -y flathub com.github.iwalton3.jellyfin-media-player
flatpak install -y flathub com.nextcloud.desktopclient.nextcloud
flatpak install -y flathub chat.revolt.RevoltDesktop
flatpak install -y flathub com.qq.QQ
flatpak install -y flathub com.discordapp.Discord
flatpak install -y flathub com.mattjakeman.ExtensionManager
flatpak install -y flathub com.google.EarthPro
flatpak install -y flathub com.obsproject.Studio
flatpak install -y flathub fr.handbrake.ghb
flatpak install -y flathub com.spotify.Client
flatpak install -y flathub com.tencent.WeChat
flatpak install -y flathub com.valvesoftware.Steam
flatpak install -y flathub io.github.shiftey.Desktop
flatpak install -y flathub net.agalwood.Motrix
flatpak install -y flathub org.musescore.MuseScore
flatpak install -y flathub org.qbittorrent.qBittorrent
flatpak install -y flathub org.signal.Signal
flatpak install -y flathub org.inkscape.Inkscape
flatpak install -y flathub org.gnome.Boxes
flatpak install -y flathub org.kde.krita
flatpak install -y flathub org.mozilla.Thunderbird
flatpak install -y flathub io.missioncenter.MissionCenter
flatpak install -y flathub com.getpostman.Postman
flatpak install -y flathub org.shotcut.Shotcut
flatpak install -y flathub org.blender.Blender
flatpak install -y flathub org.videolan.VLC
flatpak install -y flathub com.wps.Office
flatpak install -y flathub org.chromium.Chromium
flatpak install -y flathub com.dosbox_x.DOSBox-X
flatpak install -y flathub com.mojang.Minecraft
flatpak install -y flathub org.codeblocks.codeblocks
flatpak install -y flathub org.gnome.Epiphany
flatpak install -y flathub org.stellarium.Stellarium
flatpak install -y flathub com.mattjakeman.ExtensionManager
flatpak install -y flathub org.kde.kdenlive
flatpak install -y flathub io.gitlab.adhami3310.Impression
flatpak install -y flathub io.github.thetumultuousunicornofdarkness.cpu-x
flatpak install -y flathub com.jeffser.Alpaca
flatpak install -y flathub com.belmoussaoui.Decoder
flatpak install -y flathub com.yubico.yubioath
flatpak install -y flathub org.sqlitebrowser.sqlitebrowser
flatpak install -y flathub io.bassi.Amberol

# Docker
curl -fsSL get.docker.com -o get-docker.sh
CHANNEL=stable sh get-docker.sh
rm get-docker.sh

# Node
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg --yes
NODE_MAJOR=22
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
sudo apt update
sudo apt install nodejs -y

# code
cd ~
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
rm -f packages.microsoft.gpg
sudo apt update
sudo apt install code -y

# qget
echo '# generated by anduinos
alias qget="aria2c -c -s 16 -x 16 -k 1M -j 16"
' >> ~/.bashrc
source ~/.bashrc

# Microsoft
echo "This is a hack here. This is because Microsoft's repo is soooooooo stupid that it mixed up the .NET SDK!"
UB_VERSION=$(lsb_release -rs)
wget -q "https://packages.microsoft.com/config/ubuntu/$UB_VERSION/packages-microsoft-prod.deb"
sudo dpkg -i ./packages-microsoft-prod.deb
rm ./packages-microsoft-prod.deb
sudo apt update
sudo apt install powershell -y
sudo rm /etc/apt/sources.list.d/microsoft-prod.list
sudo apt update

# Powershell Profile
URL="https://gitlab.aiursoft.cn/anduin/reimage-windows/-/raw/master/PROFILE_LINUX.ps1"
mkdir -p ~/.config
mkdir -p ~/.config/powershell
curl "$URL" --output - > ~/.config/powershell/Microsoft.PowerShell_profile.ps1

echo "Press Enter when NextCloud is set up."

# XRay
echo "Installing xray..."
sudo bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install
sudo cp ~/Nextcloud/Storage/XRay/xray.json /usr/local/etc/xray/config.json
sudo systemctl restart xray.service
#echo "Setting system proxy settings to use xray..."
#export http_proxy="http://localhost:10809/"
#export https_proxy="http://localhost:10809/"

# Repos
echo "Adding repos..."
mkdir ~/Source > /dev/null 2>&1
mkdir ~/Source/Repos > /dev/null 2>&1

# Git
echo "Setting git..."
git config --global user.email "anduin@aiursoft.com"
git config --global user.name "Anduin Xue"

# SSH Keys
echo "Setting SSH keys..."
mkdir ~/.ssh
cp -r ~/Nextcloud/Encrypted/SSH/* ~/.ssh/
chmod 644 ~/.ssh/id_rsa.pub
chmod 600 ~/.ssh/id_rsa

# GPG Keys
echo "Setting GPG keys..."
sudo rm ~/.gnupg -rf
mkdir ~/.gnupg
gpg --import ~/Nextcloud/Encrypted/GPG/private.key
chmod 700 ~/.gnupg
SIGNKEY=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | awk -F/ '{print $2}')
git config --global user.signingkey $SIGNKEY
git config --global commit.gpgsign true
git config --global pull.rebase false 

# Test ssh with ssh to git@github
echo "Testing SSH connection to github.com..."
echo "yes" | ssh git@github.com

# Dotnet tools
function TryInstallDotnetTool {
  toolName=$1
  globalTools=$(dotnet tool list --global)

  if [[ $globalTools =~ $toolName ]]; then
    echo "$toolName is already installed. Updating it.." 
    dotnet tool update --global $toolName --interactive --add-source "https://nuget.aiursoft.cn/v3/index.json" 2>/dev/null
  else
    echo "$toolName is not installed. Installing it.."
    if ! dotnet tool install --global $toolName --interactive --add-source "https://nuget.aiursoft.cn/v3/index.json" 2>/dev/null; then
      echo "$toolName failed to be installed. Trying updating it.."
      dotnet tool update --global $toolName --interactive --add-source "https://nuget.aiursoft.cn/v3/index.json" 2>/dev/null
    fi
  fi
}

TryInstallDotnetTool "dotnet-ef"
TryInstallDotnetTool "Anduin.Parser"
TryInstallDotnetTool "Aiursoft.Static"
TryInstallDotnetTool "Anduin.HappyRecorder"
~/.dotnet/tools/happy-recorder config set-db-location --path ~/Nextcloud/Storage/HappyRecords/
TryInstallDotnetTool "Aiursoft.NugetNinja"
TryInstallDotnetTool "Aiursoft.Dotlang"
TryInstallDotnetTool "Aiursoft.DotDownload"
TryInstallDotnetTool "Aiursoft.NiBot"
TryInstallDotnetTool "JetBrains.ReSharper.GlobalTools"
TryInstallDotnetTool "Aiursoft.Voyager"

sudo ln -s ~/Nextcloud/ ~/Desktop/
sudo ln -s ~/Source/Repos/ ~/Desktop/

sudo apt install python3-apt python3-regex -y
wget https://github.com/davidfoerster/aptsources-cleanup/releases/download/v0.1.7.5.2/aptsources-cleanup.pyz
chmod +x aptsources-cleanup.pyz
sudo bash -c "echo all | ./aptsources-cleanup.pyz  --yes"
rm aptsources-cleanup.pyz